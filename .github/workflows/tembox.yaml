name: ðŸš€ Tembox
on:
  push:
    branches-ignore: [wip/**]
    tags: ["**"]
  pull_request:
permissions:
  contents: write
jobs:
  release:
    name: ðŸ¦€ ${{ matrix.toolchain }} on linux/${{ matrix.arch }}
    runs-on: ubuntu-${{ matrix.arch[1] == 'arm64' && '24.04-arm' || 'latest' }}
    # https://github.com/orgs/community/discussions/57827#discussioncomment-6579237
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          cache-key: ${{ matrix.arch }}
          components: rustfmt, clippy, llvm-tools
      - name: Build Binary
        run: make tembox
      - name: Install a Package
        uses: docker://quay.io/tembo/ubuntu:24.04
        with:
          entrypoint: ./target/release/tembox
          args: libjson-c
      - name: Get the Version
        if: env.VERSION == ''
        shell: bash
        run: echo "VERSION=$(grep "^version" Cargo.toml | sed -r 's/version[^"]+"([^"]+).*/\1/')" >> $GITHUB_ENV
      - name: Determine Archive Name
        shell: bash
        run: |
          echo "ARCHIVE=tembox-v$VERSION-linux-${{ matrix.arch }}" >> $GITHUB_ENV
      - name: Package Archive
        shell: bash
        run: |
          set -ex
          printf "Packaging %s\n" "$ARCHIVE"
          mkdir "$ARCHIVE"
          cp "target/release/tembox" "$ARCHIVE"/
          cp {README.md,CHANGELOG.md,LICENSE.md} "$ARCHIVE"/
          tar czvf "$ARCHIVE.tar.gz" "$ARCHIVE"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: "${{ env.ARCHIVE }}.*"
          name: "${{ env.ARCHIVE }}"
          overwrite: true
        if: matrix.toolchain == 'stable' && github.ref == 'refs/tags/test-release'
      - name: Check the Version
        shell: bash
        run: |
          set -ex
          if [ "${{ github.ref_name }}" != "v$VERSION" ]; then
              printf "Cargo.toml version %s does not match tag %s\n" "$VERSION" "${{ github.ref_name }}" >&2
              exit 1
          fi
        if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )
      - name: Generate Release Notes
        id: notes
        uses: theory/changelog-version-notes-action@v0
        with: { version: "v${{ env.VERSION }}" }
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: "Release ${{ env.VERSION }}"
          files: "tembox-*"
          body_path: ${{ steps.notes.outputs.file }}
        if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )
